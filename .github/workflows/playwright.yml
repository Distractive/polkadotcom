name: playwright

on:
  push:
    branches:
      - develop
      - staging
  pull_request:
    branches:
      - develop
      - staging
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_ENV: test
  SKIP_ENV_VALIDATION: true

jobs:
  variables:
    runs-on: ubuntu-latest
    outputs:
      branch_name: ${{ steps.get_branch.outputs.branch_name }}
      url: ${{ steps.url.outputs.url }}
      matrix: ${{ steps.matrix.outputs.matrix }}
      commit_id: ${{ steps.get_branch.outputs.commit_id }}
    steps:
      - uses: actions/checkout@v4

      - id: get_branch
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "branch_name=${{ github.head_ref }}" >> $GITHUB_OUTPUT
            echo "commit_id=${{ github.event.pull_request.head.sha }}" >> $GITHUB_OUTPUT
          else
            echo "branch_name=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "commit_id=${{ github.sha }}" >> $GITHUB_OUTPUT
          fi

      - id: url
        run: |
          sanitized_branch=$(echo "${{ steps.get_branch.outputs.branch_name }}" | sed 's/\//-/g')
          url="https://${sanitized_branch}.${{ vars.AMPLIFY_ID }}.amplifyapp.com"
          echo "url=$url" >> $GITHUB_OUTPUT

      - id: matrix
        working-directory: apps/web
        run: |
          matrix=$(find tests/ -type f -name "*.test.ts" | sed 's/\/\//\//' | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

  check-amplify-deployment:
    needs: variables
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Wait for Amplify deployment to succeed
        run: |
          ./scripts/check-amplify-deployment.sh \
            "${{ vars.AWS_REGION }}" \
            "${{ vars.AMPLIFY_ID }}" \
            "${{ needs.variables.outputs.branch_name }}" \
            "${{ needs.variables.outputs.commit_id }}"

  playwright:
    runs-on: ubuntu-latest
    needs:
      - variables
      - check-amplify-deployment
    strategy:
      fail-fast: false
      max-parallel: 10
      matrix:
        test: ${{ fromJSON(needs.variables.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --ignore-scripts --frozen-lockfile

      - name: Install Playwright
        run: pnpm playwright install chromium --with-deps

      - name: ðŸ§ª Run Playwright tests
        working-directory: apps/web
        env:
          AMPLIFY_URL: ${{ needs.variables.outputs.url }}
          AMPLIFY_USERNAME: ${{ secrets.AMPLIFY_USERNAME }}
          AMPLIFY_PASSWORD: ${{ secrets.AMPLIFY_PASSWORD }}
        run: npx playwright test ${{ matrix.test }}

      - name: Getting artifacts name
        id: get-artifacts-name
        if: failure()
        run: |
          artifacts_name=$(basename ${{ matrix.test }} | tr -d '/')
          echo $artifacts_name
          echo "artifacts_name=$artifacts_name" >> $GITHUB_OUTPUT

      - name: ðŸ“¦ Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.get-artifacts-name.outputs.artifacts_name }}
          path: |
            apps/web/test-results
          retention-days: 2
